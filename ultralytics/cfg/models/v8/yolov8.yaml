# ultra_nano_detect_nextgen.yaml
# -------------------------------
# task: pure object detect (hands)
# scale: "s"  small (~6 GFLOPs)
# -------------------------------
task: detect
nc: 1            # single class: hand
scale: "s"

# ------------------------------------------
# Backbone (depth=1 everywhere, width×0.5)
# ------------------------------------------
backbone:
  - [-1, 1, Conv,     [16,   3, 2]]   # P1/2 stem
  - [-1, 1, DWConv,   [32,   3, 2]]   # P2
  - [-1, 1, ECA,      [32,   3]]
  - [-1, 1, C2f,      [32,  True]]

  - [-1, 1, DWConv,   [64,   3, 2]]   # P3
  - [-1, 1, CoordAtt, [64]]
  - [-1, 1, C2f,      [64,  True]]

  - [-1, 1, DWConv,   [128,  3, 2]]   # P4
  - [-1, 1, C2f,      [128, True]]

  - [-1, 1, DWConv,   [256,  3, 2]]   # P5
  - [-1, 1, SPPF,     [256,  5]]

# ------------------------------------------
# Tiny BiFPN Neck (one pass up+down)
# ------------------------------------------
head:
  # merge P5 & P4 → fused P4
  - [-1, 1, nn.Upsample,    [None, 2, 'nearest']]  # slice  5→4
  - [[11, 8], 1, BiFPN,     [[128,256], 128]]      # inputs: [P4,P5], out 128-ch

  # merge fused P4 & P3 → fused P3
  - [-1, 1, nn.Upsample,    [None, 2, 'nearest']]
  - [[12, 6], 1, BiFPN,     [[64,128], 64]]        # inputs: [P3,fused P4], out 64-ch

  # downsample fused P3 → back to P4 scale
  - [-1, 1, Conv,           [64, 3, 2]]
  - [[14, 12], 1, BiFPN,    [[128,64],128]]        # inputs: [P4,down(P3)], out 128-ch

  # downsample fused P4 → back to P5 scale
  - [-1, 1, Conv,           [128,3, 2]]
  - [[16, 5], 1, BiFPN,     [[256,128],256]]       # inputs: [P5,down(fused P4)], out 256-ch

# ------------------------------------------
# Context Enhancement at P4
# ------------------------------------------
  - [12, 1, MobileViTBlock, [128, 1, 4]]            # global context into fused P4  

# ------------------------------------------
# Dynamic Detect Head
# ------------------------------------------
  - [[14,16,18], 1, DyDetect, [nc]]                # anchors on [P3,P4,P5]
