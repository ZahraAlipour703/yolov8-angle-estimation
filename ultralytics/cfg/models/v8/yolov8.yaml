# ultra_nano_detect_fixed.yaml
# ——————————————————————————————————————————————————————————————————————————
task: detect            # ← be sure this is "detect", not "pose"
nc:   1                 # one class: hand
scale: "s"              # small topology (~5 GFLOPs)

# — Backbone (depth=1 everywhere, width×0.5) ——————————————
backbone:
  # P1/2
  - [-1, 1, Conv,    [16, 3, 2]]
  # P2/4
  - [-1, 1, DWConv,  [32, 3, 2]]
  - [-1, 1, ECA,     [32,   3]]
  - [-1, 1, C2f,     [32, True]]
  # P3/8
  - [-1, 1, DWConv,  [64, 3, 2]]
  - [-1, 1, CoordAtt,[64]]
  - [-1, 1, C2f,     [64, True]]
  # P4/16
  - [-1, 1, DWConv,  [128, 3, 2]]
  - [-1, 1, C2f,     [128, True]]
  # P5/32
  - [-1, 1, DWConv,  [256, 3, 2]]
  - [-1, 1, SPPF,    [256, 5]]

# — Neck (top‑down FPN) + final Detect head ——————————————
head:
  # P5 → P4
  - [-1, 1, nn.Upsample, [None, 2, 'nearest']]
  - [[-1, 8], 1, Concat, [1]]
  - [-1, 1, C2f,         [128, True]]

  # P4 → P3
  - [-1, 1, nn.Upsample, [None, 2, 'nearest']]
  - [[-1, 6], 1, Concat, [1]]
  - [-1, 1, C2f,         [64, True]]

  # P3 → P4 (down)
  - [-1, 1, Conv,        [64, 3, 2]]
  - [[-1, 13],1, Concat, [1]]
  - [-1, 1, C2f,         [128, True]]

  # P4 → P5 (down)
  - [-1, 1, Conv,        [128, 3, 2]]
  - [[-1, 10],1, Concat, [1]]
  - [-1, 1, C2f,         [256, True]]

  # final Detect on P3, P4, P5
  - [[16, 19, 22],1, Detect, [nc]]
