# ultra_nano_detect_pub_fixed.yaml
task: detect
nc: 1
scale: "s"   # small topology (~6 GFLOPs)

# --------------------------
# 1) Backbone (depth=1, width×0.5 everywhere)
# --------------------------
backbone:
  # P1/2 → 1/2 spatial
  - [-1, 1, Conv,     [16, 3, 2]]   # 0
  # P2/4 → 1/4 spatial
  - [-1, 1, DWConv,   [32, 3, 2]]   # 1
  - [-1, 1, ECA,      [32,   3]]    # 2
  - [-1, 1, C2f,      [32, True]]   # 3
  # P3/8 → 1/8 spatial
  - [-1, 1, DWConv,   [64, 3, 2]]   # 4
  - [-1, 1, CoordAtt, [64]]         # 5
  - [-1, 1, C2f,      [64, True]]   # 6
  # P4/16 → 1/16 spatial
  - [-1, 1, DWConv,   [128,3, 2]]   # 7
  - [-1, 1, C2f,      [128,True]]   # 8
  # P5/32 → 1/32 spatial
  - [-1, 1, DWConv,   [256,3, 2]]   # 9
  - [-1, 1, SPPF,     [256, 5]]     # 10

# --------------------------
# 2) Neck & Head
# --------------------------
head:
  # --- fuse P5 → P4
  - [-1, 1, nn.Upsample,    [None, 2, 'nearest']]  # 11: upsample P5 to P4
  - [[11, 8], 1, Concat,    [1]]                   # 12: [P5↑,P4]
  - [-1, 1, C2f,            [128, True]]           # 13

  # --- global context at P4
  - [13,  1, MobileViTBlock,[128, 1, 4]]            # 14
  - [-1, 1, C2f,            [128, True]]           # 15

  # --- fuse P4 → P3
  - [-1, 1, nn.Upsample,    [None, 2, 'nearest']]  # 16: upsample P4 to P3
  - [[16, 6], 1, Concat,    [1]]                   # 17: [P4↑,P3]
  - [-1, 1, C2f,            [64,  True]]           # 18

  # --- per‑scale dynamic conv
  - [18, 1, DyConv,         [64,  3, 4]]           # 19: adapt P3
  - [15, 1, DyConv,         [128, 3, 4]]           # 20: adapt P4
  - [10, 1, DyConv,         [256, 3, 4]]           # 21: adapt P5

  # --- final multiscale Detect
  - [[19, 20, 21], 1, Detect, [nc]]                # 22: detect on {P3,P4,P5}
