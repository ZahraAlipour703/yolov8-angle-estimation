# ultra_nano_detect_fixed.yaml
task: detect
nc: 1            # one class: hand
scale: "s"       # small topology (~5 GFLOPs)

# ------------------------------------------
# Backbone (depth=1, width×0.5 everywhere)
# ------------------------------------------
backbone:
  # P1/2
  - [-1, 1, Conv,     [16, 3, 2]]   # 0
  # P2/4
  - [-1, 1, DWConv,   [32, 3, 2]]   # 1
  - [-1, 1, ECA,      [32, 3]]      # 2
  - [-1, 1, C2f,      [32, True]]   # 3
  # P3/8
  - [-1, 1, DWConv,   [64, 3, 2]]   # 4
  - [-1, 1, CoordAtt, [64]]         # 5
  - [-1, 1, C2f,      [64, True]]   # 6
  # P4/16
  - [-1, 1, DWConv,   [128, 3, 2]]  # 7
  - [-1, 1, C2f,      [128, True]]  # 8
  # P5/32
  - [-1, 1, DWConv,   [256, 3, 2]]  # 9
  - [-1, 1, SPPF,     [256, 5]]     # 10

# ------------------------------------------
# Neck (top-down FPN) + Fusion
# ------------------------------------------
head:
  # P5 → P4
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]  # 11
  - [[11, 8], 1, Concat, [1]]                   # 12: concat upsampled P5 with P4
  - [-1, 1, C2f, [128, True]]                   # 13

  # P4 → P3
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]  # 14
  - [[14, 6], 1, Concat, [1]]                   # 15: concat upsampled P4 with P3
  - [-1, 1, C2f, [64, True]]                    # 16

  # P3 → P4 (downsample)
  - [-1, 1, Conv, [64, 3, 2]]                   # 17
  - [[17, 13], 1, Concat, [1]]                  # 18: concat downsampled P3 with fused P4
  - [-1, 1, C2f, [128, True]]                   # 19

  # P4 → P5 (downsample)
  - [-1, 1, Conv, [128, 3, 2]]                  # 20
  - [[20, 10], 1, Concat, [1]]                  # 21: concat downsampled P4 with P5
  - [-1, 1, C2f, [256, True]]                   # 22

  # Final detection head
  - [[16, 19, 22], 1, Detect, [nc]]             # 23: detect on P3/P4/P5
