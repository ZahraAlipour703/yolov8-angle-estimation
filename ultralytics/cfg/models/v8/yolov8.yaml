task: detect
nc: 1
scale: "s"
# ------------------------------------------
# Backbone (depth=1, width×0.5 everywhere)
# ------------------------------------------
backbone:
  # P1/2
  - [-1, 1, Conv,     [16, 3, 2]]   # 0
  # P2/4
  - [-1, 1, DWConv,   [32, 3, 2]]   # 1
  - [-1, 1, ECA,      [32, 3]]      # 2
  - [-1, 1, C2f,      [32, True]]   # 3
  # P3/8
  - [-1, 1, DWConv,   [64, 3, 2]]   # 4
  - [-1, 1, CoordAtt, [64]]         # 5
  - [-1, 1, C2f,      [64, True]]   # 6
  # P4/16
  - [-1, 1, DWConv,   [128, 3, 2]]  # 7
  - [-1, 1, C2f,      [128, True]]  # 8
  # P5/32
  - [-1, 1, DWConv,   [256, 3, 2]]  # 9
  - [-1, 1, SPPF,     [256, 5]]     # 10
# Neck (bidirectional BiFPN w/ weighted fusion)
head:
  # P5 → P4 with learnable weights
  - [-1, 1, Upsample,     [None,2,'nearest']]
  - [[-1, 8], 'wbi_fuse',  [2]]            # custom “weight‑bi_fuse” module
  - [-1, 1, C2f,           [128,True]]

  # P4 → P3
  - [-1, 1, Upsample,     [None,2,'nearest']]
  - [[-1, 6], 'wbi_fuse',  [2]]
  - [-1, 1, C2f,           [64,True]]

  # P3 → P4 (down)
  - [-1, 1, Conv,          [64,3,2]]
  - [[-1, 13], 'wbi_fuse', [2]]
  - [-1, 1, C2f,           [128,True]]

  # P4 → P5 (down)
  - [-1, 1, Conv,          [128,3,2]]
  - [[-1, 10], 'wbi_fuse', [2]]
  - [-1, 1, C2f,           [256,True]]

  # small transformer at P4
  - [7, 1, MobileViTBlock, [128, 1, 4]]

  # final dynamic head before Detect
  - [-1,1, DyHead,         [256]]

  # Detect
  - [[16,19,22],1,Detect,  [nc]]
